#!/usr/bin/env php
<?php
/**
 * Processes a package_compatible.xml file as generated by this command:
 * "pyrus.phar make ...". This script then fixes the location of various
 * files marked for installation.
 * See https://github.com/pyrus/Pyrus/issues/26 for more information.
 */

function main()
{
    $args = $_SERVER['argv'];
    $script = array_shift($args);
    if (!count($args)) {
        fprintf(STDERR, "Usage: %s <channel>\n", $script);
        exit(1);
    }
    $channel = array_shift($args);

    $sxml = new SimpleXMLElement(
        'php://stdin',
        LIBXML_NONET | LIBXML_COMPACT,
        TRUE
    );

    $folders = array(
        'doc'   => 'docs',
        'test'  => 'tests',
        'data'  => 'data',
        'php'   => 'src',
    );

    $ns = 'http://pear.php.net/dtd/package-2.1';
    $sxml->registerXPathNamespace('pkg', $ns);
    foreach ($folders as $role => $folder) {
        $xpath = $sxml->xpath('/pkg:package/pkg:contents[1]/pkg:dir[1]/'.
                              'pkg:file[@role="'.$role.'"]');
        if (is_array($xpath)) {
            foreach ($xpath as $node) {
                $parts = explode('/', (string) $node->attributes('')->name);
                $len = count($parts);

                if ($len) {
                    // Replace role by folder.
                    if ($parts[0] == $role) {
                        $parts[0] = $folder;
                    }
                    // Remove channel & package name.
                    if ($len > 3 && $parts[1] == $channel) {
                        array_splice($parts, 1, 2);
                    }
                    // Remove path duplication.
                    $len = (count($parts) - 2) / 2;
                    if (array_slice($parts, 1, $len) ==
                        array_slice($parts, 1 + $len, -1)) {
                        array_splice($parts, 1, $len);
                    }
                    $node->attributes('')->name = implode('/', $parts);
                }
            }
        }
        $xpath = $sxml->xpath('/pkg:package/pkg:phprelease[1]/pkg:filelist[1]'.
                              '/pkg:install[starts-with(@name, "'.$role.'/")]');
        if (is_array($xpath)) {
            foreach ($xpath as $node) {
                $parts = explode('/', (string) $node->attributes('')->name);
                $len = count($parts);

                if ($len) {
                    // Replace role by folder.
                    if ($parts[0] == $role) {
                        $parts[0] = $folder;
                    }
                    // Remove channel & package name.
                    if ($len > 3 && $parts[1] == $channel) {
                        array_splice($parts, 1, 2);
                    }
                    // Remove path duplication.
                    $len = (count($parts) - 2) / 2;
                    if (array_slice($parts, 1, $len) ==
                        array_slice($parts, 1 + $len, -1)) {
                        array_splice($parts, 1, $len);
                    }
                    $node->attributes('')->name = implode('/', $parts);
                }

                $parts = explode('/', (string) $node->attributes('')->as);
                $len = count($parts);

                if ($len) {
                    // Remove path duplication.
                    $len = (count($parts) - 2) / 2;
                    if (array_slice($parts, 1, $len) ==
                        array_slice($parts, 1 + $len, -1)) {
                        array_splice($parts, 1, $len);
                    }
                    $node->attributes('')->as = implode('/', $parts);
                }
            }
        }
    }

    echo $sxml->asXML();
}

main();

