#!/usr/bin/env php
<?php
/**
 * Processes a package_compatible.xml file as generated by this command:
 * "pyrus.phar make ...". This script then fixes the location of various
 * files marked for installation.
 * See https://github.com/pyrus/Pyrus/issues/26 for more information.
 */

function main()
{
    $args = $_SERVER['argv'];
    $script = array_shift($args);
    if (!count($args)) {
        fprintf(STDERR, "Usage: %s <channel>\n", $script);
        exit(1);
    }
    $channel = array_shift($args);

    $sxml = new SimpleXMLElement(
        'php://stdin',
        LIBXML_NONET | LIBXML_COMPACT,
        TRUE
    );
    $ns = 'http://pear.php.net/dtd/package-2.1';
    $sxml->registerXPathNamespace('pkg', $ns);
    foreach (array('doc', 'test', 'data') as $role) {
        $xpath = $sxml->xpath('/pkg:package/pkg:contents[1]/pkg:dir[1]/pkg:file[@role="'.$role.'"]');
        if (is_array($xpath)) {
            foreach ($xpath as $node) {
                $parts = explode('/', (string) $node->attributes('')->name);
                $len = count($parts) - 4;
                if ($len > 0 &&
                    array_slice($parts, 3, $len / 2) ==
                    array_slice($parts, 3 + $len / 2, -1)) {
                    array_splice($parts, 3, $len / 2);
                    $node->attributes('')->name = implode('/', $parts);
                }
            }
        }
        $xpath = $sxml->xpath('/pkg:package/pkg:phprelease[1]/pkg:filelist[1]/pkg:install[starts-with(@name, "'.$role.'/")]');
        if (is_array($xpath)) {
            foreach ($xpath as $node) {
                $parts = explode('/', (string) $node->attributes('')->name);
                $len = count($parts) - 4;
                if ($len > 0 &&
                    array_slice($parts, 3, $len / 2) ==
                    array_slice($parts, 3 + $len / 2, -1)) {
                    array_splice($parts, 3, $len / 2);
                    $node->attributes('')->name = implode('/', $parts);
                }
                else
                    continue;

                $parts = explode('/', (string) $node->attributes('')->as);
                $len = count($parts) - 2;
                if ($len > 0 &&
                    array_slice($parts, 1, $len / 2) ==
                    array_slice($parts, 1 + $len / 2, -1)) {
                    array_splice($parts, 1, $len / 2);
                    array_unshift($parts, $channel);
                    $node->attributes('')->as = implode('/', $parts);
                }
            }
        }
    }
    echo $sxml->asXML();
}

main();

