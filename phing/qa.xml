<?xml version="1.0"?>
<project name="Erebot_buildenv_qa">
    <property name="subfile.phpcs"              value="${phing.dir.erebot_buildenv}/phing/qa/phpcs.xml"/>
    <property name="subfile.pdepend"            value="${phing.dir.erebot_buildenv}/phing/qa/pdepend.xml"/>
    <property name="subfile.phpmd"              value="${phing.dir.erebot_buildenv}/phing/qa/phpmd.xml"/>
    <property name="subfile.phpcpd"             value="${phing.dir.erebot_buildenv}/phing/qa/phpcpd.xml"/>
    <property name="subfile.coverage.pre"       value="${phing.dir.erebot_buildenv}/phing/qa/pre_coverage.xml"/>
    <property name="subfile.phpunit"            value="${phing.dir.erebot_buildenv}/phing/qa/phpunit.xml"/>
    <property name="subfile.coverage"           value="${phing.dir.erebot_buildenv}/phing/qa/coverage.xml"/>

    <property name="qa.coverage.db"             value="build/${phing.project.name}.db"/>
    <property name="qa.coverage.tmp"            value="build/${phing.project.name}.xml"/>
    <property name="qa.coverage.min.project"    value="0"/>
    <property name="qa.coverage.min.class"      value="0"/>
    <property name="qa.coverage.min.method"     value="0"/>


    <!-- Unit tests and code coverage -->
    <target name="test" depends="prepare_test,bare_test"
        description="Run tests and generate code coverage reports (same as 'phing qa_coverage')" />
    <target name="tests" depends="prepare_test,bare_test"
        description="Same as 'phing test'"/>
    <target name="coverage" depends="prepare_test,bare_test"
        description="Same as 'phing test'"/>
    <target name="prepare_test" depends="all"
        description="Tasks to do before running the test suite"/>
    <target name="bare_test" depends="qa_coverage"
        description="Run the tests without any preparations"/>


    <!-- Quality Assurance -->
    <target name="qa"
        depends="qa_lint,qa_codesniffer,qa_depend,qa_mess,qa_duplicates,qa_test"
        description="Run Qualify-Assurance (QA) tools"/>

    <target name="qa_lint" description="Check QA using phplint">
        <phplint><fileset refid="sources"/></phplint>
    </target>

    <target name="qa_codesniffer" description="Check QA using PHP_CodeSniffer">
        <php function="chdir"><param value="vendor/bin"/></php>
        <available followSymlinks="true" file="vendor/bin/phpcs" property="usable"/>
        <php function="chdir"><param value="../.."/></php>
        <fail unless="usable">
            The "squizlabs/php_codesniffer" package (&gt;=1.2.2) must be installed
            for the "qa_codesniffer" target to be available.
        </fail>
        <import file="${subfile.phpcs}"/>
    </target>

    <target name="qa_depend"
        description="Check QA using PHP depend">
        <php function="chdir"><param value="vendor/bin"/></php>
        <available followSymlinks="true" file="vendor/bin/pdepend" property="usable"/>
        <php function="chdir"><param value="../.."/></php>
        <fail unless="usable">
            The "pdepend/pdepend" package must be installed
            for the "qa_depend" target to be available.
        </fail>
        <import file="${subfile.pdepend}"/>
    </target>

    <target name="qa_mess"
        description="Check QA using phpmd (PHP Mess Detector)">
        <php function="chdir"><param value="vendor/bin"/></php>
        <available followSymlinks="true" file="vendor/bin/phpmd" property="usable"/>
        <php function="chdir"><param value="../.."/></php>
        <fail unless="usable">
            The "phpmd/phpmd" package must be installed
            for the "qa_mess" target to be available.
        </fail>
        <import file="${subfile.phpmd}"/>
    </target>

    <target name="qa_duplicates"
        description="Check QA using phpcpd (PHP Copy/Paste Detector)">
        <php function="chdir"><param value="vendor/bin"/></php>
        <available followSymlinks="true" file="vendor/bin/phpcpd" property="usable"/>
        <php function="chdir"><param value="../.."/></php>
        <fail unless="usable">
            The "sebastian/phpcpd" package must be installed
            for the "qa_duplicates" target to be available.
        </fail>
        <import file="${subfile.phpcpd}"/>
    </target>

    <target name="qa_pre_coverage" hidden="true">
        <php function="chdir"><param value="vendor/bin"/></php>
        <available followSymlinks="true" file="vendor/bin/phpunit" property="usable"/>
        <php function="chdir"><param value="../.."/></php>
        <fail unless="usable">
            The "phpunit/phpunit" package must be installed
            for the "qa_pre_coverage" target to be available.
        </fail>
        <import file="${subfile.coverage.pre}"/>
    </target>

    <target name="qa_test" depends="qa_pre_coverage"
        description="Run (unit) tests using PHPUnit">
        <php expression="define('TESTENV_DIR', dirname('${phing.file}').DIRECTORY_SEPARATOR.'tests'.DIRECTORY_SEPARATOR.'testenv');"/>
        <php function="chdir"><param value="vendor/bin"/></php>
        <available followSymlinks="true" file="vendor/bin/phpunit" property="usable"/>
        <php function="chdir"><param value="../.."/></php>
        <fail unless="usable">
            The "phpunit/phpunit" package must be installed
            for the "qa_test" target to be available.
        </fail>
        <import file="${subfile.phpunit}"/>
    </target>

    <target name="qa_coverage" depends="qa_test"
        description="Run code coverage analysis based on unit tests (see 'phing qa_test')">
        <php function="chdir"><param value="vendor/bin"/></php>
        <available followSymlinks="true" file="vendor/bin/phpunit" property="usable"/>
        <php function="chdir"><param value="../.."/></php>
        <fail unless="usable">
            The "phpunit/phpunit" package must be installed
            for the "qa_coverage" target to be available.
        </fail>
        <import file="${subfile.coverage}"/>
    </target>
</project>
