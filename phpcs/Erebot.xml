<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="pcsg-generated-ruleset">
    <description>
        Created with the PHP Coding Standard Generator. http://edorian.github.com/php-coding-standard-generator/

        Official coding standard for Erebot.

        See also http://fpoirotte.github.com/Erebot/Coding_Standard.html
        for a description of this coding standard.
    </description>

    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Files.ByteOrderMark"/>
    <!-- *  Use "\n" for line endings. -->
    <rule ref="Generic.Files.LineEndings"/>
    <rule ref="Generic.Files.LineLength"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.MultipleStatementAlignment">
        <properties>
            <property name="error" value="false"/>
            <property name="ignoreMultiLine" value="true"/>
        </properties>
    </rule>
    <!-- *  Put a single space between the type
            and the operand of a cast. -->
    <rule ref="Generic.Formatting.SpaceAfterCast"/>
    <rule ref="Generic.Functions.CallTimePassByReference"/>
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.PHP.NoSilencedErrors">
        <properties>
            <property name="error" value="false"/>
        </properties>
    </rule>
    <rule ref="Generic.PHP.UpperCaseConstant"/>
    <!-- *  Use spaces instead of tabs for indent. -->
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <!-- *  Use 4 spaces for indent. -->
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="exact" value="false"/>
        </properties>
    </rule>
    <rule ref="PEAR.Classes.ClassDeclaration"/>
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.Functions.FunctionCallSignature"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    <rule ref="PEAR.NamingConventions.ValidFunctionName"/>
    <rule ref="PEAR.NamingConventions.ValidVariableName"/>
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent"/>
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="PEAR.WhiteSpace.ScopeIndent"/>
    <rule ref="PHPUnitStandard.Testing.AllowedFunctionOverride"/>
    <rule ref="PHPUnitStandard.Testing.ClassName"/>
    <rule ref="PHPUnitStandard.Testing.TestOrProviderIsPublic"/>
    <rule ref="PHPUnitStandard.Testing.UnusedProvider"/>
    <rule ref="Zend.Files.ClosingTag"/>
    <rule ref="Zend.NamingConventions.ValidVariableName"/>

    <!--
        Indenting and whitespaces
    -->

    <!-- *  No trailing whitespace. -->
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
    <!-- *  All text files should end in a single newline (\n). -->


    <!--
        Operators
    -->

    <!-- *  All binary operators should have a space
            before and after the operator. -->
    <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>


    <!--
        Casting
    -->



    <!--
        Control structures
    -->

    <!-- *  Put a single space between the type
            and the operand of a cast. -->



    <!-- Line length and wrapping -->
    <!-- Function/method calls -->
    <!-- Function/method declarations -->
    <!-- Class constructor calls -->
    <!-- Arrays -->
    <!-- Quotes -->
    <!-- String concatenation -->
    <!-- Comments -->
    <!-- Filesystem paths -->
    <!-- Including code -->
    <!-- PHP code tags -->
    <!-- Semicolons -->
    <!-- Example URLs -->
    <!-- Naming conventions: Files -->
    <!-- Naming conventions: Classes and interfaces -->
    <!-- Naming conventions: Class methods and properties -->
    <!-- Naming conventions: Class constructors -->
    <!-- Naming conventions: Functions -->
    <!-- Naming conventions: Constants -->
    <!-- Naming conventions: Global variables -->
</ruleset>

